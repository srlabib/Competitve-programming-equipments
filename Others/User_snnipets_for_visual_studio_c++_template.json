{
	"Template": {
		"prefix": "include",
		"body": [
			"#include<bits/stdc++.h>",
			"",
			"using namespace std; ",
			"",
			"// #include<ext/pb_ds/assoc_container.hpp>",
			"// #include<ext/pb_ds/tree_policy.hpp>",
			"// using namespace __gnu_pbds;",
			"// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set; // find_by_order, order_of_key",
			"",
			"#define int long long",
			"typedef long long ll;",
			"typedef vector<ll> vl;",
			"typedef vector<int> vi;",
			"typedef vector<bool> vb;",
			"typedef vector<vi> vvi;",
			"typedef vector<vl> vvl;",
			"typedef pair<ll,ll> pll;",
			"typedef vector<pll> vpll;",
			"",
			"#define checkbit(x,n) (x&(1LL<<n))",
			"#define setbit(x,n) (x=(x|(1LL<<n)))",
			"#define resetbit(x,n) (x=(x&(~(1LL<<n))))",
			"",
			"#define All(a) a.begin(),a.end()",
			"#define FOR(i,a,b) for(int i=a;i<b;i++)",
			"template<typename T> void get_vector(T&a){for(auto&e:a)cin>>e;}",
			"template<typename T> void put_vector(T a){for(auto e:a)cout<<e<<\" \";cout<<endl;}",
			"",
			"const int inf = INT_MAX;",
			"const int INF = 1e18;",
			"",
			"void solve(){",
			"    ${0://start coding here}",
			"}",
			"",
			"signed main()",
			"{",
			"    ios_base::sync_with_stdio(false);",
			"    cin.tie(NULL);",
			"    ",
			"    int T = 1;",
			"    cin>>T;",
			"    while(T--){",
			"        solve();",
			"    }",
			"    return 0;",
			"}"
		],
		"description": ""
	}
}
